<!-- SignUp.razor -->
@page "/signup"
@using System.ComponentModel.DataAnnotations

<h3>Sign Up</h3>

<EditForm Model="@signupModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="username">Username:</label>
        <InputText id="username" @bind-Value="signupModel.Username" class="form-control" />
        <ValidationMessage For="@(() => signupModel.Username)" />
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="signupModel.Email" class="form-control" />
        <ValidationMessage For="@(() => signupModel.Email)" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" @bind-Value="signupModel.Password" type="password" class="form-control" />
        <ValidationMessage For="@(() => signupModel.Password)" />
    </div>

    <button type="submit" class="btn btn-primary">Sign Up</button>
</EditForm>

@code {
    private SignUpModel signupModel = new SignUpModel();

    private void HandleValidSubmit()
    {
        // Handle the valid form submission here
        // You can perform additional actions like sending the data to the server
        // For this example, let's just print the submitted data
        Console.WriteLine($"Username: {signupModel.Username}, Email: {signupModel.Email}, Password: {signupModel.Password}");
    }

    private class SignUpModel
    {
        [Required(ErrorMessage = "Username is required.")]
        public string Username { get; set; }

        [Required(ErrorMessage = "Email is required.")]
        [EmailAddress(ErrorMessage = "Invalid email address.")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Password is required.")]
        [MinLength(6, ErrorMessage = "Password must be at least 6 characters.")]
        public string Password { get; set; }
    }
}
